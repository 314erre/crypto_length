4.1) 
Because length extension attacks rely on a fixed-length unknown value, a fixed 8-digit password allows for easy length extension attacks based
on the message being sent. Using an HMAC instead of just the hash, the hashing is done more than once and uses a secret key derived from hashing to
give better security. Because it is hashing more than once, using a length extension attack is very unlikely and would be more like brute force.

4.2)
In part 2.2, we saw and implemented a hash collision attack. Hash collision attacks allowed us to execute two different programs with the
same digital signature, which had two widely different results in execution. This is a huge problem to the integrity of a system because files
can be modified and execute to take action that can be detrimental to a system without any warning. Threats can be checked with their digital signature
and if they match the expected signature of a trusted program, then that is very dangerous to a system, as it is a breech in security.

4.3)
For Bleichenbacher's attack, it is critical that the exponent(e) is very low, such that a number n can be chosen that is less than the eth root of the
modulus. If this criteria is satisfied, then the attack may be carried out against the system. By using a higher exponent, such as 2^16 + 1, it is
mathematically guaranteed that the modulus will be greater than the perfect power of e, making it impossible to forge a signature using this method. 